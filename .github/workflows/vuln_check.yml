name: Check For Vulnerabilities
on:
  workflow_call:
jobs:
  determine_if_python:
    name: Determine If Python Repository
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      file_exists: ${{ steps.is_python.outputs.exists }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Check If Python
        id: is_python
        uses: thebinaryfelix/check-file-existence-action@main
        with:
          files: 'app/main.py'
  determine_if_js:
    name: Determine If Javascript Repository
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      file_exists: ${{ steps.is_js.outputs.exists }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Check If Javascript
        id: is_js
        uses: thebinaryfelix/check-file-existence-action@main
        with:
          files: 'package.json'
  trivy_vuln_check:
    name: Run AquaSecurity Trivy Scan On Files (Vulnerabilities)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Run Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scanners: 'vuln'
          github-pat: ${{ secrets.WORKFLOW_TOKEN }}
          exit-code: 1
          ignore-unfixed: true
  determine_if_dependency_check_suppression_file_exists:
    name: Determine If Dependency Check Suppression File Exists
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      file_exists: ${{ steps.suppression_file_exists.outputs.exists }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Check If Suppression File Exists
        id: suppression_file_exists
        uses: thebinaryfelix/check-file-existence-action@main
        with:
          files: 'dependencyCheckSuppressions.xml'
  dependency_check_python:
    name: Runs Dependency Check Against Libraries (Python)
    runs-on: ubuntu-latest
    needs: [determine_if_dependency_check_suppression_file_exists, determine_if_python]
    if: ${{ always() && needs.determine_if_python.outputs.file_exists == 'true' }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID_PROD || secrets.AWS_ACCESS_KEY_ID_STAGE }}
          aws-secret-access-key: ${{ github.ref == 'refs/heads/main' && secrets.AWS_SECRET_ACCESS_KEY_PROD || secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          aws-region: us-east-1
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Create local scan_dependencies Folder
        run: mkdir scan_dependencies
      - name: Setup PIP for CodeArtifact Access
        run: aws codeartifact login --tool pip --repository ${{ vars.CODEARTIFACT_SHARED_CLASS_REPOSITORY }} --domain ${{ vars.CODEARTIFACT_DOMAIN}} --domain-owner ${{ vars.CODEARTIFACT_DOMAIN_OWNER }} --region us-east-1
      - name: Install Packages Into Local Folder
        run: pip install -r requirements.txt -t scan_dependencies
      - name: Create Depdendency Check Argument String With Suppression File
        if: ${{ always() && needs.determine_if_dependency_check_suppression_file_exists.outputs.file_exists == 'true' }}
        run: echo "DEPENDENCY_CHECK_ARG_STRING=--cveValidForHours 48 --enableExperimental --suppression dependencyCheckSuppressions.xml" >> $GITHUB_ENV
      - name: Create Depdendency Check Argument String With No Suppression File
        if: ${{ always() && needs.determine_if_dependency_check_suppression_file_exists.outputs.file_exists == 'false' }}
        run: echo "DEPENDENCY_CHECK_ARG_STRING=--cveValidForHours 48 --enableExperimental" >> $GITHUB_ENV
      - name: Run Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency_check
        with:
          project: '${{ github.event.repository.name }}'
          path: 'scan_dependencies'
          format: 'HTML'
          out: 'reports'
          args: "$DEPENDENCY_CHECK_ARG_STRING"
      - name: Upload Test results
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: Dependency Check Report
          path: ${{github.workspace}}/
  dependency_check_js:
    name: Runs Dependency Check Against Libraries (JavaScript)
    runs-on: ubuntu-latest
    needs: [determine_if_dependency_check_suppression_file_exists, determine_if_js]
    if: ${{ always() && needs.determine_if_js.outputs.file_exists == 'true' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Create local scan_dependencies Folder
        run: mkdir scan_dependencies
      - name: Install Node.js dependencies
        run: npm ci
      - name: Build NPM Packages
        run: npm run build
      - name: Prune Packages
        run: npm prune --production
      - name: Install Packages Into Local Folder
        run: cp -prd package* node_modules scan_dependencies
      - name: Create Depdendency Check Argument String With Suppression File
        if: ${{ always() && needs.determine_if_dependency_check_suppression_file_exists.outputs.file_exists == 'true' }}
        run: echo "DEPENDENCY_CHECK_ARG_STRING=--cveValidForHours 48 --enableExperimental --suppression dependencyCheckSuppressions.xml" >> $GITHUB_ENV
      - name: Create Depdendency Check Argument String With No Suppression File
        if: ${{ always() && needs.determine_if_dependency_check_suppression_file_exists.outputs.file_exists == 'false' }}
        run: echo "DEPENDENCY_CHECK_ARG_STRING=--cveValidForHours 48 --enableExperimental" >> $GITHUB_ENV
      - name: Run Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency_check
        with:
          project: '${{ github.event.repository.name }}'
          path: 'scan_dependencies'
          format: 'HTML'
          out: 'reports'
          args: "$DEPENDENCY_CHECK_ARG_STRING"
      - name: Upload Test results
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: Dependency Check Report
          path: ${{github.workspace}}/reports
