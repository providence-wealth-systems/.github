name: Deploy Library To AWS Code Artifact
on:
  workflow_call:
jobs:
  determine_if_library:
    name: Determine If Library Repositry
    runs-on: ubuntu-latest
    outputs:
      file_exists: ${{ steps.is_library.outputs.exists }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Check If Library
        id: is_library
        uses: thebinaryfelix/check-file-existence-action@v1.0.0
        with:
          files: 'setup.py'
  publish_artifact:
    name: Deploy Library To AWS Code Artifact
    runs-on: ubuntu-latest
    needs: determine_if_library
    if: ${{ needs.determine_if_library.outputs.file_exists }} == 'true'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Setup Python Envirnoment  
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build and publish
        run: |
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain pws-codeartifact --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain pws-codeartifact --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --repository algorithm-shared-classes --format pypi --query repositoryEndpoint --output text`
          python setup.py sdist
          twine upload dist/*
